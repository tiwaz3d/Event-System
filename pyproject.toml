[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "event-system"
version = "0.1.0"
description = "Event management system"
authors = ["Tadas Stankevicius <tadas.nan@gmail.com>"]
readme = "README.md"
packages = [
    { include = "event_system" },
    { include = "services", from = "event_system" }
]

[tool.poetry.dependencies]
python = "^3.13"
fastapi = "^0.109.2"
sqlalchemy = "^2.0.27"
pydantic = "^2.6.1"
psycopg2-binary = "^2.9.10"
uvicorn = "^0.27.1"
python-dotenv = "^1.0.1"
pydantic-settings = "^2.8.0"
httpx = "^0.28.1"
asyncpg = "^0.30.0" 
alembic = "^1.14.1"
backoff = "^2.2.1"
jinja2 = "^3.1.5"
black = "^25.1.0"
isort = "^6.0.0"
pytest = "^8.3.4"
pytest-asyncio = "^0.25.3"
pytest-cov = "^6.0.0"
loguru = "^0.7.3"

[tool.black]
line-length = 120
target-version = ['py313']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 120

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true

[tool.ruff]
select = ["E", "F", "B", "I"]
ignore = []
line-length = 88
target-version = "py311"

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["event_system/tests"]
python_files = "test_*.py"
addopts = "-v --cov=event_system --cov-report=term-missing"
asyncio_default_fixture_loop_scope = "function"